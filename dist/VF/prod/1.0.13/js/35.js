(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{335:function(e,t){throw new Error('Module parse failed: Unexpected token (1:0)\nFile was processed with these loaders:\n * ./node_modules/markdown-loader/index.js\n * ./node_modules/html-loader/dist/cjs.js\nYou may need an additional loader to handle the result of these loaders.\n> <p>// Module\n| var code = &quot;## 动态数据 该功能针对，多项选择、下拉选择、单项选择组件。 ### 第一步 在功能区添加该种类型的组件（多项选择、下拉选择、单项选择） ### 第二步 选择字段属性 ### 第三步 查看到<code>选择项配置</code> 在<code>选择项数据地址</code>中配上你的ajax地址 附上一个测试ajax地址 <a href="https://cdn.shenzhepei.com/VF/select.json">https://cdn.shenzhepei.com/VF/select.json</a> ### 第四步 如果你想要修改你的数据格式 store/center.js <code>javascript // 初始化 列表 changeSelectList: function (state, newState) { const list = state.list; list.forEach(item =&gt; { if (item.dragItem.key === newState.key) { item.dragItem.ajaxList = newState.value; } }) state.list = list; },</code> 这里的newState.value就是传入值，进行相应的格式化就行了 ### 第五步 如果你想要修改你的ajax请求整体返回格式 utils/request.js <code>javascript // { // data: &#39;数据&#39;, // resultCode: &#39;0000&#39;, // resultMsg：&#39;错误信息&#39; // } // 可自行判断 逻辑报错请求 axios.interceptors.response.use(response =&gt; { const {data} = response; const locale = localStorage.getItem(&#39;locale&#39;); let errMessage = &#39;网络异常，请重试&#39;; if (locale === &#39;en&#39;) { errMessage = &#39;Network exception, please try again&#39;; } if (data) { if (data.resultCode === &#39;0000&#39;) { return data.data } else { Message.error(data.returnMessage || errMessage) return Promise.reject(false); } } else { Message.error(errMessage) return Promise.reject(false); } }, function (e) { Message.error(errMessage); return Promise.reject(false); });</code> &quot;;\n| // Exports')}}]);