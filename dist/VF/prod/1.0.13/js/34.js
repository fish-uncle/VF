(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{334:function(e,t){throw new Error('Module parse failed: Unexpected token (1:0)\nFile was processed with these loaders:\n * ./node_modules/markdown-loader/index.js\n * ./node_modules/html-loader/dist/cjs.js\nYou may need an additional loader to handle the result of these loaders.\n> <p>// Module\n| var code = &quot;## Dynamic data This function aims at multiple selection, drop-down selection and single selection components. ### Step one Add this type of component in the ribbon (multiple selection, drop-down selection, single selection) ### Step two Select field properties ### Step three View the <code>option configuration</code> Match your <code>Ajax address</code> in the option data address Attach a test Ajax address <a href="https://cdn.shenzhepei.com/VF/select.json">https://cdn.shenzhepei.com/VF/select.json</a> ### Step four If you want to change your data format store/center.js <code>javascript // Initialization list changeSelectList: function (state, newState) { const list = state.list; list.forEach(item =&gt; { if (item.dragItem.key === newState.key) { item.dragItem.ajaxList = newState.value; } }) state.list = list; },</code> there newState.value Just pass in the value and format it accordingly ### Step five If you want to modify the overall return format of your Ajax request utils/request.js <code>javascript // { // data: &#39;data&#39;, // resultCode: &#39;0000&#39;, // resultMsg：&#39;error message&#39; // } // It can judge logic error request by itself axios.interceptors.response.use(response =&gt; { const {data} = response; const locale = localStorage.getItem(&#39;locale&#39;); let errMessage = &#39;网络异常，请重试&#39;; if (locale === &#39;en&#39;) { errMessage = &#39;Network exception, please try again&#39;; } if (data) { if (data.resultCode === &#39;0000&#39;) { return data.data } else { Message.error(data.returnMessage || errMessage) return Promise.reject(false); } } else { Message.error(errMessage) return Promise.reject(false); } }, function (e) { Message.error(errMessage); return Promise.reject(false); });</code> &quot;;\n| // Exports')}}]);