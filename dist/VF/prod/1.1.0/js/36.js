(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{359:function(e,s){e.exports='<h2 id="动态数据">动态数据</h2> <p>该功能针对，多项选择、下拉选择、单项选择组件。</p> <h3 id="第一步">第一步</h3> <p>在功能区添加该种类型的组件（多项选择、下拉选择、单项选择）</p> <h3 id="第二步">第二步</h3> <p>选择字段属性</p> <h3 id="第三步">第三步</h3> <p>查看到<code>选择项配置</code></p> <p>在<code>选择项数据地址</code>中配上你的ajax地址</p> <p>附上一个测试ajax地址</p> <p><a href="https://cdn.shenzhepei.com/VF/select.json">https://cdn.shenzhepei.com/VF/select.json</a></p> <h3 id="第四步">第四步</h3> <p>如果你想要修改你的ajax请求整体返回格式</p> <p>utils/request.js</p> <pre><code class="language-javascript">// {\n//   data: &#39;数据&#39;,\n//   resultCode: &#39;0000&#39;,\n//   resultMsg：&#39;错误信息&#39;\n// }\n// 可自行判断 逻辑报错请求\naxios.interceptors.response.use(response =&gt; {\n  const {data} = response;\n  const locale = localStorage.getItem(&#39;locale&#39;);\n  let errMessage = &#39;网络异常，请重试&#39;;\n  if (locale === &#39;en&#39;) {\n    errMessage = &#39;Network exception, please try again&#39;;\n  }\n  if (data) {\n    if (data.resultCode === &#39;0000&#39;) {\n      return data.data\n    } else {\n      Message.error(data.returnMessage || errMessage)\n      return Promise.reject(false);\n    }\n  } else {\n    Message.error(errMessage)\n    return Promise.reject(false);\n  }\n}, function (e) {\n  Message.error(errMessage);\n  return Promise.reject(false);\n});</code></pre> '}}]);